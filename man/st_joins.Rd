% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st-joins.R
\name{st_joins}
\alias{st_joins}
\alias{st_left_join}
\alias{st_inner_join}
\alias{st_semi_join}
\alias{st_anti_join}
\title{Join two 'sf' objects.}
\usage{
st_left_join(x, y, ...)

st_inner_join(x, y, ...)

st_semi_join(x, y, join = sf::st_intersects, ...)

st_anti_join(x, y, join = sf::st_intersects, ...)
}
\arguments{
\item{x}{object of class \code{sf}}

\item{y}{object of class \code{sf}}

\item{...}{arguments passed on to the \code{join} function (e.g. \code{prepared}, or a pattern for \link[sf]{st_relate})}

\item{join}{geometry predicate function with the same profile as \link[sf]{st_intersects}; see details}
}
\description{
Both `st_left_join()` and `st_inner_join()` are
wrappers around `sf::st_join()` with appropriate
argument handling for `left`.

Both `st_anti_join()` and `st_semi_join()` are
wrappers around `sfx::st_any()` used within
`dplyr::filter()` (plus the application of
logical `!` where appropriate).
}
\examples{
library(sf)
library(ggplot2)
library(dplyr)
data(states_map)
data(ngp)

show_map <- function (x) {
    ggplot(x) +
        geom_sf(data = tx) +
        geom_sf(color = "red") +
        theme_void()
}

# MUTLIPOLYGON of the US state of Texas
tx <- states_map \%>\%
    filter(region == "texas")

# [Semi-join] Intersects (Default)
ngp \%>\%
        st_semi_join(tx) \%>\%
        show_map()

# [Semi-join] Coveredy by
ngp \%>\%
        st_semi_join(tx, sf::st_covered_by) \%>\%
        show_map()

# [Anti-join] Intersects (Default)
ngp \%>\%
        st_anti_join(tx) \%>\%
        show_map()

# [Inner-join] Intersects (Default)
ngp \%>\%
  st_inner_join(tx)

}
